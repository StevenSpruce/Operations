2023-04-17T10:05:31.505Z
cwd: ~\OneDrive - Department for Education\Documents\Prototypes\operations
package: govuk-prototype-kit@13.6.0
argv: C:\Program Files\nodejs\node.exe ~\AppData\Local\npm-cache\_npx\ab0cb2c39bc0319f\node_modules\govuk-prototype-kit\bin\cli migrate
Started [Check migration is being applied to a pre v13 prototype]
Succeeded [Check migration is being applied to a pre v13 prototype]
2023-04-17T10:06:30.689Z
cwd: ~\OneDrive - Department for Education\Documents\Prototypes\operations
package: govuk-prototype-kit@13.6.0
argv: C:\Program Files\nodejs\node.exe ~\OneDrive - Department for Education\Documents\Prototypes\operations\node_modules\govuk-prototype-kit\bin\cli migrate -- ~\OneDrive - Department for Education\Documents\Prototypes\operations
Started [Migrate config.js to config.json]
Started [Update application SCSS file]
Started [Deleted files that are no longer needed]
Started [Deleted directories that are no longer needed]
Started [Delete listen-on-port.js]
Started [Delete server.js]
Started [Delete start.js]
Started [Delete gulpfile.js]
Started [Delete VERSION.txt]
Started [Delete Procfile]
Started [Delete app/assets/sass/application-ie8.scss]
Started [Delete app/assets/sass/unbranded-ie8.scss]
Started [Remove unused directory docs]
Started [Remove unused directory gulp]
Started [Remove unused directory lib]
Started [Remove unused directory public]
Succeeded [Migrate config.js to config.json]
Succeeded [Delete listen-on-port.js]
Succeeded [Delete server.js]
Succeeded [Delete start.js]
Succeeded [Delete VERSION.txt]
Succeeded [Delete gulpfile.js]
Succeeded [Delete app/assets/sass/application-ie8.scss]
Succeeded [Delete app/assets/sass/unbranded-ie8.scss]
Succeeded [Delete Procfile]
Succeeded [Deleted files that are no longer needed]
Found [// Add your routes here - above the module.exports line] in [app\routes.js], replacing
Started [Overwrite app/assets/javascripts/application.js]
Started [Overwrite app/views/layout.html]
Started [Overwrite app/filters.js]
Found [// Add extra styles here, or re-organise the Sass files in whichever way makes most sense to you] in [app\assets\sass\application.scss], replacing
Keeping these lines from old file
Copying from [node_modules\govuk-prototype-kit\prototype-starter\app\assets\javascripts\application.js] to [app\assets\javascripts\application.js]
Copying from [node_modules\govuk-prototype-kit\prototype-starter\app\views\layouts\main.html] to [app\views\layout.html]
Copying from [node_modules\govuk-prototype-kit\prototype-starter\app\filters.js] to [app\filters.js]
Started [Delete app/assets/images/separator-2x.png]
Started [Delete app/assets/images/separator.png]
Started [Delete app/assets/images/unbranded.ico]
Started [Delete app/assets/javascripts/auto-store-data.js]
Started [Delete app/views/includes/breadcrumb_examples.html]
Started [Delete app/assets/sass/unbranded.scss]
Started [Delete app/views/layout_unbranded.html]
Started [Delete app/assets/sass/patterns/_related-items.scss]
Started [Delete app/assets/sass/patterns/_step-by-step-related.scss]
Started [Delete app/assets/sass/patterns/_step-by-step-header.scss]
Started [Delete app/assets/sass/patterns/_step-by-step-nav.scss]
Started [Delete app/assets/sass/patterns/_task-list.scss]
Keeping these lines from old file
Started [Delete app/assets/javascripts/jquery-1.11.3.js]
Succeeded [Remove unused directory gulp]
Failed [Delete app/assets/images/unbranded.ico]
Succeeded [Delete app/assets/images/separator-2x.png]
Succeeded [Delete app/assets/javascripts/auto-store-data.js]
Succeeded [Delete app/assets/images/separator.png]
Succeeded [Delete app/assets/sass/unbranded.scss]
Succeeded [Delete app/views/includes/breadcrumb_examples.html]
Succeeded [Delete app/views/layout_unbranded.html]
Succeeded [Delete app/assets/sass/patterns/_related-items.scss]
Succeeded [Delete app/assets/sass/patterns/_step-by-step-related.scss]
Succeeded [Update application SCSS file]
Succeeded [Delete app/assets/sass/patterns/_task-list.scss]
Succeeded [Delete app/assets/sass/patterns/_step-by-step-nav.scss]
Succeeded [Delete app/assets/sass/patterns/_step-by-step-header.scss]
Succeeded [Delete app/assets/javascripts/jquery-1.11.3.js]
//,// For guidance on how to create routes see:,// https://prototype-kit.service.gov.uk/docs/create-routes,//,,const govukPrototypeKit = require('govuk-prototype-kit'),const router = govukPrototypeKit.requests.setupRouter(),,// Add your routes here,,,,// Run this code when a form is submitted to 'juggling-balls-answer',router.post('/FEWCollectionSelection', function (req, res) {,,    // Make a variable and give it the value from 'SelectedOption',    var selectedOption = req.session.data['SelectedOption'],  ,    // Check whether the variable matches a condition,    if (selectedOption == "staff"){,      // Send user to next page,      res.redirect('/FEWSelectMethodRecordStaffData'),    } else {,      // Send user to ineligible page,      res.redirect('/FEWVacancyStart'),    },}),,,,router.post('/FEWStaffMethodSelection', function (req, res) {,,  // Make a variable and give it the value from 'FEWStaffMethodSelection',  var selectedOptionStaff = req.session.data['SelectedOptionStaff'],,  // Check whether the variable matches a condition,  if (selectedOptionStaff == "online"){,    // Send user to next page,    res.redirect('/FEWStaffSummaryOpen'),  } else {,    // Send user to ineligible page,    res.redirect('/FEWUploadStaffFile'),  },}),,,router.post('/FEWTeachingVacanciesSelection', function (req, res) {,,  // Make a variable and give it the value from 'FEWStaffMethodSelection',  var selectedTeachingVacancies = req.session.data['TeachingVacancies'],,  // Check whether the variable matches a condition,  if (selectedTeachingVacancies == "No"){,    // Send user to next page,    res.redirect('/FEWApprentices'),  } else {,    // Send user to ineligible page,    res.redirect('/FEWNumberVacancies'),  },}),,,router.post('/FEWTeachingRecruitment', function (req, res) {,,  // Make a variable and give it the value from 'FEWStaffMethodSelection',  var selectedTeachingRecruitment = req.session.data['TeachingRecruitment'],,  // Check whether the variable matches a condition,  if (selectedTeachingRecruitment == "No"){,    // Send user to next page,    res.redirect('/FEWApprentices'),  } else {,    // Send user to ineligible page,    res.redirect('/FEWDifficultRecruitment'),  },}),,,router.post('/FEWCounsellingServices', function (req, res) {,,  // Make a variable and give it the value from 'FEWStaffMethodSelection',  var selectedCounsellingService = req.session.data['CounsellingService'],,  // Check whether the variable matches a condition,  if (selectedCounsellingService == "Yes"){,    // Send user to next page,    res.redirect('/FEWWhenIsCounsellingAvailable'),  } else {,    // Send user to ineligible page,    res.redirect('/FEWCheckYourAnswers'),  },}),,,router.post('/FEWGConfirmNumberBoard', function (req, res) {,,  // Make a variable and give it the value from 'FEWStaffMethodSelection',  var confirmBoardNumbers = req.session.data['ConfirmBoard'],,  // Check whether the variable matches a condition,  if (confirmBoardNumbers == "True"){,    // Send user to next page,    res.redirect('/FEWGBoardGender'),  } else {,    // Send user to ineligible page,    res.redirect('/FEWGBoardRepresentation'),  },}),,,,,,,,router.post('/FEWWhatQualsProgs', function (req, res) {,,  // Make a variable and give it the value from 'FEWStaffMethodSelection',  var confirmWhatQualsProgs = req.session.data['WhatQualsProgs'],,  // Check whether the variable matches a condition,  if (confirmWhatQualsProgs == "Academic"){,    // Send user to next page,    res.redirect('/FEWAcademicQuals'),  } else if (confirmWhatQualsProgs == "Vocational"){,    // Send user to ineligible page,    res.redirect('/FEWVocationalProgs'),  } else {,    // Send user to ineligible page,    res.redirect('/FEWOtherLearningProgs'),  },}),,,router.post('/InYearVacancies', function (req, res) {,,  // Make a variable and give it the value from 'FEWStaffMethodSelection',  var confirmVacancies = req.session.data['Vacancies'],,  // Check whether the variable matches a condition,  if (confirmVacancies == "Yes"){,    // Send user to next page,    res.redirect('/FEWGBoardMemberVacancies'),  } else {,    // Send user to ineligible page,    res.redirect('/FEWGCheckYourAnswers'),  },}),,,,router.post('/ConfirmSameOrg', function (req, res) {,,  // Make a variable and give it the value from 'FEWStaffMethodSelection',  var confirmSameOrg = req.session.data['SameOrg'],,  // Check whether the variable matches a condition,  if (confirmSameOrg == "Yes"){,    // Send user to next page,    res.redirect('/FEWTeachingEmploymentContractCompleted'),  } else {,    // Send user to ineligible page,    res.redirect('/FEWNoLongerWorks'),  },}),,,,,router.post('/ConfirmMainContract', function (req, res) {,,  // Make a variable and give it the value from 'FEWStaffMethodSelection',  var MainContract = req.session.data['MainContract'],,  // Check whether the variable matches a condition,  if (MainContract == "Permanent"){,    // Send user to next page,    res.redirect('/FEWWeeklyHours'),  } else if (MainContract == "FixedTerm"){,    // Send user to ineligible page,    res.redirect('/FEWWeeklyHours'),  } else {,    // Send user to ineligible page,    res.redirect('/FEWSalary'),  },}),,,router.post('/FEWCheckHighestTeachingQualification', function (req, res) {,,,  var Studying = req.session.data['HighestTeachingQual'],,  // Check whether the variable matches a condition,  if (Studying == "Working towards a teacher training qualification"){,    // Send user to next page,    res.redirect('/FEWTeachingQualStudying'),,    ,  } else {,    // Send user to ineligible page,    res.redirect('/FEWTeachingStatus'),  },}),,,router.post('/FEWSelectSubRoles', function (req, res) {,,,  var SubRoles = req.session.data['SubRole'],  var JobRole = req.session.data['JobRole'],,  // Check whether the variable matches a condition,  if (SubRoles.length ==1 &&  (JobRole == "Teacher" ||"Teacher" in JobRole) ) { ,    // Send user to next page,    res.redirect('/FEWWhatQualsProgrammes'),,,  } else if (SubRoles.length ==1 && (JobRole == "Senior Leader"||"Senior Leader" in JobRole)){,    // Send user to ineligible page,    res.redirect('/FEWLeaderHead'),,  } else if (SubRoles.length ==1 && (JobRole == "Manager"||"Manager" in JobRole )){,    // Send user to ineligible page,    res.redirect('/FEWTeachingResponsibilities'),,  } else if (SubRoles.length ==1 && (JobRole == "Teaching Support"||"Teaching Support" in JobRole)){,    // Send user to ineligible page,    res.redirect('/FEWTeachingResponsibilities'),,,  } else if (SubRoles.length ==1 && (JobRole == "Administration"||"Administration" in JobRole)){,    // Send user to ineligible page,    res.redirect('/FEWTeachingResponsibilities'),    ,  } else {,    // Send user to ineligible page,    res.redirect('/FEWMainRole'),    ,  },}),,,router.post('/FEWSelectMainRole', function (req, res) {,,  var MainRole = req.session.data['MainRole'],  var JobRole = req.session.data['JobRole'],  var TeachingResponsibilities = req.session.data['TeachingResponsibilities'],,  // Check whether the variable matches a condition,  if (MainRole == "Advanced Practitioner" ,  || MainRole == "Instructor",  || MainRole == "Lecturer",  || MainRole == "Practitioner",  || MainRole == "Teacher",  || MainRole == "Trainer",  || MainRole == "Tutor"){,    // Send user to ineligible page,    res.redirect('/FEWWhatQualsProgrammes'),,,  } else if (MainRole == "Assistant Head",  ||MainRole == "Assistant Principal",  ||MainRole == "CEO",  ||MainRole == "Director",  ||MainRole == "Executive Head Teacher",  ||MainRole == "Managing Director",  ||MainRole == "Principal",  ||MainRole == "Senior Manager",  ||MainRole == "Vice-Principal"){,    // Send user to ineligible page,    res.redirect('/FEWLeaderHead'),,  } else if (JobRole.includes("Teacher") || JobRole == "Teacher" || TeachingResponsibilities =="Yes"){,    // Send user to ineligible page,    res.redirect('/FEWWhatQualsProgrammes'),,    ,  } else {,    // Send user to ineligible page,    res.redirect('/FEWTeachingResponsibilities'),    ,  },}),,,router.post('/FEWRouteFromHeadFE', function (req, res) {,,  var JobRole = req.session.data['JobRole'],  var TeachingResponsibilities = req.session.data['TeachingResponsibilities'],,  // Check whether the variable matches a condition, if (JobRole.includes("Teacher") || JobRole == "Teacher" || TeachingResponsibilities =="Yes") {,    // Send user to ineligible page,    res.redirect('/FEWWhatQualsProgrammes'),    ,  } else {,    // Send user to ineligible page,    res.redirect('/FEWTeachingResponsibilities'),    ,  },}),,,router.post('/FEWRouteFromHeadFE', function (req, res) {,,  var JobRole = req.session.data['JobRole'],,  // Check whether the variable matches a condition, if (JobRole.includes("Teacher") || JobRole == "Teacher"){,    // Send user to ineligible page,    res.redirect('/FEWWhatQualsProgrammes'),    ,  } else {,    // Send user to ineligible page,    res.redirect('/FEWTeachingResponsibilities'),    ,  },}),,router.post('/FEWRouteFromTeachingResponsibilities', function (req, res) {,,  var TeachingResponsibilities = req.session.data['TeachingResponsibilities'],,  // Check whether the variable matches a condition, if (TeachingResponsibilities == "Yes"){,    // Send user to ineligible page,    res.redirect('/FEWAddSubRole'),    ,  } else {,    // Send user to ineligible page,    res.redirect('/FEWAddJobRoleCompleted'),    ,  },}),,,,module.exports = router,
Found [module.exports = router;,module.exports = router] in [app\routes.js], removing
Succeeded [Remove unused directory lib]
Succeeded [Remove unused directory public]
Succeeded [Update routes file]
Succeeded [Remove unused directory docs]
Succeeded [Overwrite app/filters.js]
Succeeded [Deleted directories that are no longer needed]
Succeeded [Overwrite app/assets/javascripts/application.js]
Started [Delete app/views/includes/head.html]
Started [Delete app/views/includes/scripts.html]
Succeeded [Delete app/views/includes/head.html]
Succeeded [Delete app/views/includes/scripts.html]
Started [Remove old pattern includes from application SCSS file]
Succeeded [Remove old pattern includes from application SCSS file]
Started [Remove empty directory app/assets/sass/patterns]
Started [Remove empty directory app/assets/images]
Started [Remove empty directory app/views/includes]
Skipped deleting app/assets/images
Skipped deleting app/views/includes
Succeeded [Remove empty directory app/assets/sass/patterns]
